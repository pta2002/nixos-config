(defwidget bar [primary monitor]
  (centerbox
    :orientation "h"
    :class "bar"
    (workspaces :monitor monitor)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (network)
    (metric :label {volume["muted"] ? "寮"
                    : volume["volume"] == 0 ? "尿"
                    : volume["volume"] <= 33 ? "禮"
                    : volume["volume"] <= 66 ? "例"
                    : "領"}
            :value {volume["volume"]}
            :onchange "pamixer --set-volume {}"
            :tooltip "Volume: ${volume["volume"]}%"
            :reveal {!volume["muted"]}
            :green false)
    (revealer
      :transition "slideleft"
      :reveal {battery["is_battery"]}
      :duration "0.3s"
      (metric :label {battery["charging"] ? ""
                      : battery["percentage"] <= 10 ? ""
                      : battery["percentage"] <= 25 ? ""
                      : battery["percentage"] <= 50 ? ""
                      : battery["percentage"] <= 75 ? ""
                      : ""}
              :value {battery["percentage"]}
              :onchange ""
              :reveal true
              :tooltip "${round(battery["percentage"], 0)}% - ${battery["time_left"]} left"
              :green {battery["charging"] || false}))
    time))

(defwidget baticon []
  {battery["charging"] ? ""
   : battery["percentage"] <= 10 ? ""
   : battery["percentage"] <= 25 ? ""
   : battery["percentage"] <= 50 ? ""
   : battery["percentage"] <= 75 ? ""
   : ""})

(defwidget workspaces [monitor]
  (box :class "workspaces"
       :orientation "h"
       :space-evenly false
       :halign "start"
       :spacing 18
    (for desktop in {hypr[monitor].workspaces}
      (label
        :class "${desktop["status"]} ${desktop.id == hypr[monitor]["active-workspace"] ? "focused" : ""}"
        :text {desktop["name"]}))))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "🎵 ${music}" : ""}))

(defwidget wifi []
  (box
    :orientation "h"
    :space-evenly false
    :halign "center"
    :tooltip "Strength: ${network["connection"]["strength"]}%"
    :class "network"
    (label :class "label" :text "祐")
    (label :class "ssid" :text {network["connection"]["ssid"]})))

(defwidget ethernet []
  (box
    :orientation "h"
    :space-evenly false
    :halign "center"
    :class "network"
    (label :class "label nerdfont" :text "")
    (label :class "ssid" :text "Wired")))

(defwidget network []
  (box :class "network"
       :orientation "h"
       :space-evenly false
       :halign "center"
    (literal :content { network != "" && network["connection_type"] == "802-11-wireless" ? "(wifi)"
                       :
                       network != "" && network["connection_type"] == "802-3-ethernet" ? `(ethernet)` : `"disconnected"`})))

(defwidget metric [label value onchange green tooltip reveal]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
       :tooltip tooltip
    (box :class "label" label)
    (revealer 
      :transition "slideleft"
      :reveal reveal
      :duration "0.3s"
 
      (scale :min 0
             :max 101
             :active {onchange != ""}
             :value { value == "" ? 0 : value}
             :class {green ? "green" : "false"}
             :onchange onchange))))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' -i firefox || true")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(deflisten volume :initial ""
  "pa-follow")

(deflisten network :initial ""
  "scripts/follow")

(deflisten hypr :initial ""
  "scripts/hypr-follow")

(deflisten battery :initial ""
  "upower-follow")

(defwindow bar-laptop
  :monitor 0
  :windowtype "dock" ; TODO: Fix this, should be 'bg' but if it is then it's not clickable
  :geometry (geometry :x "0%"
                      :y "8px"
                      :width "1896px"
                      :height "34px"
                      :anchor "top center")
  :stacking "bg"
  :wm-ignore false
  :reserve (struts :side "top" :distance "46")
  (bar :primary false :monitor "eDP1"))

(defwindow bar-desktop-1
  :monitor "DVI-I-0"
  :windowtype "dock" ; TODO: Fix this, should be 'bg' but if it is then it's not clickable
  :geometry (geometry :x "0%"
                      :y "8px"
                      :width "1656px"
                      :height "34px"
                      :anchor "top center")
  :stacking "bg"
  :wm-ignore false
  :reserve (struts :side "top" :distance "46")
  (bar :primary false :monitor "DVI-I-0"))

(defwindow bar-desktop-2
  :monitor "HDMI-0"
  :windowtype "dock" ; TODO: Fix this, should be 'bg' but if it is then it's not clickable
  :geometry (geometry :x "0%"
                      :y "8px"
                      :width "1896px"
                      :height "34px"
                      :anchor "top center")
  :stacking "bg"
  :wm-ignore false
  :reserve (struts :side "top" :distance "46")
  (bar :primary true :monitor "HDMI-0"))

(defwindow bar-desktop-1-wl
  :monitor 0
  :stacking "bg"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "8px"
                      :width "1656px"
                      :height "34px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "46")
  (bar :primary false :monitor "DVI-I-1"))

(defwindow bar-desktop-2-wl
  :monitor 1
  :stacking "bg"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "8px"
                      :width "1896px"
                      :height "34px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "46")
  (bar :primary false :monitor "HDMI-A-3"))
